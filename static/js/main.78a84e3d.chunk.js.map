{"version":3,"sources":["Components/Card.js","Components/CocktailSearch.js","Components/CocktailDatails.js","Components/Slider.js","Components/Main.js","Components/SearchIngredient.js","App.js","reportWebVitals.js","index.js"],"names":["Card","drink","ingredient","isFull","useState","showIngrediends","setShowIngrediends","strDrink","strCategory","strDrinkThumb","strInstructions","idDrink","ingredients","Object","keys","filter","key","includes","map","item","console","log","className","src","alt","onClick","to","strDescription","strType","toLowerCase","CocktailSearch","getData","useContext","Context","request","setReqest","cocktailsArrey","setCocktailsArrey","type","onChange","e","target","value","name","length","CocktailDatails","id","useParams","info","setInfo","useEffect","fetch","then","response","json","data","drinks","window","history","back","Slider","children","numberToShow","number","setNumber","fade","setFade","slice","Main","cocktailsArr","setCocktailsArr","SearchIngredient","cocktails","setCocktails","createContext","App","loading","setLoading","useCallback","param","stateSetter","Provider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78a84e3d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ drink, ingredient, isFull }) => {\r\n  const [showIngrediends, setShowIngrediends] = useState();\r\n  if (drink) {\r\n    const {\r\n      strDrink,\r\n      strCategory,\r\n      strDrinkThumb,\r\n      strInstructions,\r\n      idDrink,\r\n    } = drink;\r\n    const ingredients = Object.keys(drink)\r\n      .filter((key) => key.includes(\"strIngredient\") && drink[key])\r\n      .map((item) => drink[item]);\r\n    console.log(ingredients);\r\n\r\n    return (\r\n      <div className={`col card ${isFull && \"full\"}`}>\r\n        <img src={strDrinkThumb} alt=\"\" />\r\n        <div className=\"col full-info\">\r\n          <span>{strCategory}</span>\r\n          <h1>{strDrink}</h1>\r\n\r\n          {isFull && (\r\n            <>\r\n              <button onClick={() => setShowIngrediends(!showIngrediends)}>\r\n                {!showIngrediends ? \"Show ingrediends\" : \"Hide ingrediends\"}\r\n              </button>\r\n              {showIngrediends &&\r\n                ingredients.map((item) => <span>{item}</span>)}\r\n              <h3>Instructions</h3>\r\n              <p>{strInstructions}</p>\r\n            </>\r\n          )}\r\n\r\n          {!isFull && (\r\n            <Link className=\"more\" to={`/cocktailDetails/${idDrink}`}>\r\n              More\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const { strDescription, strType } = ingredient;\r\n    return (\r\n      <div className=\"col card-info\">\r\n        <img\r\n          className=\"img\"\r\n          src={`https://www.thecocktaildb.com/images/ingredients/${strType.toLowerCase()}.png`}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"info\">\r\n          <h1>{strType}</h1>\r\n          <p>{strDescription}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { Context } from \"../App\";\r\n\r\nconst CocktailSearch = () => {\r\n  const { getData } = useContext(Context);\r\n\r\n  const [request, setReqest] = useState(\"\");\r\n  const [cocktailsArrey, setCocktailsArrey] = useState([]);\r\n\r\n  return (\r\n    <div className=\"col container\">\r\n      <h1>Cocktail</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setReqest(e.target.value)}\r\n          value={request}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setReqest(\"\");\r\n            getData({ name: \"s\", value: request }, setCocktailsArrey);\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"wrapper row centered\">\r\n        {cocktailsArrey?.length > 0 &&\r\n          cocktailsArrey?.map((item) => <Card drink={item} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CocktailSearch;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Card from \"./Card\";\r\n\r\nconst CocktailDatails = () => {\r\n  const { id } = useParams();\r\n  const [info, setInfo] = useState();\r\n  const getInfo = () => {\r\n    fetch(\r\n      `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}&key=1`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setInfo(data.drinks[0]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col centered container\">\r\n      <h1>Details</h1>\r\n      {info && <Card drink={info} isFull={true} />}\r\n      <button onClick={() => window.history.back}>Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CocktailDatails;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Slider = ({ children, numberToShow }) => {\r\n  const [number, setNumber] = useState(0);\r\n  const [fade, setFade] = useState(true);\r\n  console.log(children);\r\n  return (\r\n    <div className=\"col centered slider\">\r\n      <div className=\"row centered slider-width\">\r\n        <button\r\n          onClick={() => {\r\n            setNumber(number - 1 < 0 ? children.length - 1 : number - 1);\r\n            setFade(!fade);\r\n          }}\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <div className={`slide row ${!fade ? \"fade\" : \"append\"}`}>\r\n          {children.slice(number, numberToShow + number)}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            setNumber(number + 1 > children.length - 1 ? 0 : number + 1);\r\n            setFade(!fade);\r\n          }}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Slider from \"./Slider\";\r\nimport { Context } from \"../App\";\r\nimport Card from \"./Card\";\r\n\r\nconst Main = () => {\r\n  const { getData } = useContext(Context);\r\n  const [cocktailsArr, setCocktailsArr] = useState([]);\r\n  const quantity = 5;\r\n\r\n  useEffect(() => {\r\n    getData({ name: \"f\", value: \"m\" }, setCocktailsArr);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col main\">\r\n      <h1>Cocktail of the day</h1>\r\n      <div className=\"row centered wrapp\">\r\n        {cocktailsArr.length > 0 && (\r\n          <Slider numberToShow={quantity}>\r\n            {cocktailsArr.length > 0 &&\r\n              cocktailsArr.map((item) => <Card drink={item} />)}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Card from \"./Card\";\r\n\r\nconst SearchIngredient = () => {\r\n  const { getData } = useContext(Context);\r\n  const [request, setReqest] = useState(\"\");\r\n  const [cocktails, setCocktails] = useState([]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Ingredient</h1>\r\n      <div className=\"row centered container\">\r\n        <input\r\n          type=\"text\"\r\n          value={request}\r\n          onChange={(e) => setReqest(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setReqest(\"\");\r\n            getData({ name: \"i\", value: request }, setCocktails);\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"row centered\">\r\n        {cocktails?.length > 0 &&\r\n          cocktails.map((item) => <Card ingredient={item} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchIngredient;\r\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport React, { createContext, useCallback, useState } from \"react\";\r\nimport CocktailSearch from \"./Components/CocktailSearch\";\r\nimport CocktailDatails from \"./Components/CocktailDatails\";\r\nimport Main from \"./Components/Main\";\r\nimport SearchIngredient from \"./Components/SearchIngredient\";\r\n\r\nexport const Context = createContext();\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = useCallback((param, stateSetter) => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?${param.name}=${param.value}&key=1`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        stateSetter(data.drinks || data.ingredients);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Router>\r\n      <Context.Provider value={{ getData }}>\r\n        <div className=\"App row centered\">\r\n          <header>\r\n            <Link to=\"/\">Main</Link>\r\n            <Link to=\"/cocktailSearch\">Search</Link>\r\n            <Link to=\"/searchIngridient\">Ingridient</Link>\r\n          </header>\r\n          {loading && <h1>Loading</h1>}\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Main />\r\n          </Route>\r\n          <Route path=\"/cocktailSearch\">\r\n            <CocktailSearch />\r\n          </Route>\r\n          <Route path=\"/searchIngridient\">\r\n            <SearchIngredient />\r\n          </Route>\r\n          <Route path=\"/cocktailDetails/:id\">\r\n            <CocktailDatails />\r\n          </Route>\r\n        </Switch>\r\n      </Context.Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}